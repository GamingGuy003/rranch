name=rustc
version=1.66.1
description=The Rust compiler toolchain
real_version=0
source=https://static.rust-lang.org/dist/rustc-1.66.1-src.tar.xz
dependencies=[git][libssh2]
builddeps=[cmake][curl][libssh2][llvm][gdb][git][python3][openssl][pkg-config]
build={
	cd $PKG_NAME-$PKG_VERSION-src
	mkdir /opt/rustc-1.66.1
	ln -svfn rustc-1.66.1 /opt/rustc
	
	cat << EOF > config.toml
	# see config.toml.example for more possible options
	# See the 8.4 book for an old example using shipped LLVM
	# e.g. if not installing clang, or using a version before 13.0
	
	# tell x.py to not keep printing an annoying warning
	changelog-seen = 2
	
	[llvm]
	# by default, rust will build for a myriad of architectures
	targets = "X86"
	
	# When using system llvm prefer shared libraries
	link-shared = true
	
	[build]
	# omit docs to save time and space (default is to build them)
	docs = false
	
	# install extended tools: cargo, clippy, etc
	extended = true
	
	# Do not query new versions of dependencies online.
	locked-deps = true
	
	# Specify which extended tools (those from the default install).
	tools = ["cargo", "clippy", "rustfmt"]
	
	# Use the source code shipped in the tarball for the dependencies.
	# The combination of this and the "locked-deps" entry avoids downloading
	# many crates from Internet, and makes the Rustc build more stable.
	vendor = true
	
	[install]
	prefix = "/opt/rustc-1.66.1"
	docdir = "share/doc/rustc-1.66.1"
	
	[rust]
	channel = "stable"
	description = "for BLFS r11.2-930"
	
	# BLFS used to not install the FileCheck executable from llvm,
	# so disabled codegen tests.  The assembly tests rely on FileCheck
	# and cannot easily be disabled, so those will anyway fail if
	# FileCheck has not been installed.
	#codegen-tests = false
	
	[target.x86_64-unknown-linux-gnu]
	# NB the output of llvm-config (i.e. help options) may be
	# dumped to the screen when config.toml is parsed.
	llvm-config = "/usr/bin/llvm-config"
	
	[target.i686-unknown-linux-gnu]
	# NB the output of llvm-config (i.e. help options) may be
	# dumped to the screen when config.toml is parsed.
	llvm-config = "/usr/bin/llvm-config"
	
	
	EOF
	
	{ [ ! -e /usr/include/libssh2.h ] ||
	  export LIBSSH2_SYS_USE_PKG_CONFIG=1; }
	python3 ./x.py build
	
	python3 ./x.py test --verbose --no-fail-fast | tee rustc-testlog || true
	
	grep '^test result:' rustc-testlog |
	 awk '{sum1 += $4; sum2 += $6} END { print sum1 " passed; " sum2 " failed" }'
	
	DESTDIR=${PKG_INSTALL_DIR} python3 ./x.py install
	mkdir -p $PKG_INSTALL_DIR/usr/bin
	ln -sf $PKG_INSTALL_DIR/opt/$PKG_NAME-$PKG_VERSION/bin/cargo $PKG_INSTALL_DIR/usr/bin/cargo
	ln -sf $PKG_INSTALL_DIR/opt/$PKG_NAME-$PKG_VERSION/bin/rustc $PKG_INSTALL_DIR/usr/bin/rustc
}